<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.project.model.mapper.MemberMapper">


	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
	</resultMap>

	<!-- ADMIN -->
	<resultMap type="memberDto" id="memberAll" extends="member">
		<result column="user_password" property="userPwd" />
		<result column="email" property="email" />
		<result column="is_admin" property="isAdmin" />
		<result column="sido_code" property="sidoCode" />
		<result column="gugun_code" property="gugunCode" />
		<result column="create_at" property="joinDate" />
		<result column="delete_at" property="deleteAt" />
	</resultMap>

	<select id="idCheck" parameterType="String" resultType="int">
		select
		count(user_id)
		from members
		where user_id = #{userId}
	</select>

	<insert id="joinMember" parameterType="memberDto">
		insert into members (user_name, user_id, user_password, email, sido_code, gugun_code)
		values (#{userName}, #{userId}, #{userPwd}, #{email}, #{sidoCode}, #{gugunCode})
	</insert>

	<select id="loginMember" parameterType="map" resultMap="member">
		select
		user_id, user_name
		from members
		where user_id = #{userId} and
		user_password = #{userPwd} and delete_at is null
	</select>

	<!-- ADMIN -->
	<select id="listMember" parameterType="map" resultMap="memberAll">
		select *
		from members
	</select> <!-- 임시 -->

	<select id="getMember" parameterType="string"
		resultMap="memberAll">
		select *
		from members
		where user_id = #{userId}
	</select>

	<update id="updateMember" parameterType="memberDto">
		update members
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null">user_name = #{userName},</if>
			<if test="userPwd != null">user_password = #{userPwd},</if>
			<if test="email != null">email = #{email},</if>
			<if test="sidoCode != null">sido_code = #{sidoCode},</if>
			<if test="gugunCode != null">gugun_code = #{gugunCode},</if>
		</trim>
		where user_id = #{userId}
	</update>

<!-- 	<delete id="deleteMember" parameterType="String">
		delete from members
		where user_id = #{userId}
	</delete> -->
	
	<update id="deleteMember" parameterType="string">
		update members
		set delete_at = now()
		where user_id = #{userId}
	</update>
	
	
	<!-- login, token -->
	
	<select id="login" parameterType="memberDto" resultType="memberDto">
		select *
		from members
		where user_id = #{userId} and user_password = #{userPwd}
	</select>
	
	<select id="userInfo" parameterType="string" resultType="memberDto">
		select user_name, user_id, email, create_at
		from members
		where user_id = #{userId}
	</select>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from members
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update members
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update members
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<select id="getDeleteAt" parameterType="string" resultType="string">
		select DATE_FORMAT(delete_at, 'yyyy-MM-dd HH:mm:ss')
		from members
		where user_id = #{userId}
	</select>
	
</mapper>